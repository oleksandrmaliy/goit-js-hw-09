{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAtCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,SAASH,EAAMI,OAAOC,SAAShB,MAAMiB,OACjD,MAAMC,EAAOJ,SAASH,EAAMI,OAAOC,SAASE,KAAKD,OAC3CE,EAASL,SAASH,EAAMI,OAAOC,SAASG,OAAOF,OACrD,IAAIG,EAAI,EAER,GAAIF,EAAO,GAAKL,EAAQ,GAAKM,GAAU,EAErC,YADAE,EAAAzB,GAAS0B,OAAOC,QAAQ,gCAI1B,IAAKH,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAC5BtB,EAAcsB,EAAGP,GACdW,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,qBAAqB1B,QAAeC,MAAU,IAEvE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,oBAAoBxB,QAAeC,OAAW,IAEvEa,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', callPromises);\n\nfunction callPromises(event) {\n  event.preventDefault();\n\n  let delay = parseInt(event.target.elements.delay.value);\n  const step = parseInt(event.target.elements.step.value);\n  const amount = parseInt(event.target.elements.amount.value);\n  let i = 0;\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    Notiflix.Notify.failure(`All values must be positive!`);\n    return;\n  }\n\n  for (i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay} ms`);\n      }),\n      (delay += step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","target","elements","value","step","amount","i","$parcel$interopDefault","Notify","failure","then","success","catch"],"version":3,"file":"03-promises.be3f725a.js.map"}